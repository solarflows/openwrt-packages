#!/bin/sh /etc/rc.common

START=99

PROG=/etc/init.d/zerotier

get_config() {
	config_get_bool enabled $1 enabled 0
	config_get_bool nat $1 nat 0
}

log() {
	echo "$@"
	logger -t luci-zerotier "$@" # debug
}

start() {
	config_load zerotier
	config_foreach get_config zerotier

	[ $enabled -eq 0 ] && log "Service disabled in config." && return 0

	# Ensure that the service is running
	if ! $PROG running; then
		log "Service status isn't running!"
		return 1
	fi

	[ $nat -eq 0 ] && log "NAT disabled in config." && return 0

	# Wait zt tun device
	while [ "$(ifconfig | grep 'zt' | awk '{print $1}')" = "" ]
	do
		log "Waiting zt device ... "
		sleep 1
	done

	local zt_devs FW ip_segment

	zt_devs="$(ifconfig | grep 'zt' | awk '{print $1}')"

	[ -x "$(command -v nft)" ] && FW="fw4" || FW="fw3"
	for i in ${zt_devs}
	do
		ip_segment=""
		ip_segment="$(ip route | grep "dev $i proto kernel" | awk '{print $1}')"
		if [ "$FW" = "fw3" ]; then
			if iptables -S FORWARD | grep -sq "$i"; then
				continue
			fi
			iptables -I FORWARD -i "$i" -j ACCEPT
			iptables -I FORWARD -o "$i" -j ACCEPT
			iptables -t nat -I POSTROUTING -o "$i" -j MASQUERADE
			[ -n "$ip_segment" ] && iptables -t nat -I POSTROUTING -s "${ip_segment}" -j MASQUERADE
		else
			if nft list chain inet fw4 forward | grep -sq "$i"; then
				continue
			fi
			nft insert rule inet fw4 forward iifname "$i" accept
			nft insert rule inet fw4 forward oifname "$i" accept
			nft insert rule inet fw4 srcnat oifname "$i" counter masquerade
			[ -n "$ip_segment" ] && nft insert rule inet fw4 srcnat ip saddr "${ip_segment}" counter masquerade
		fi
		log "Added nat rules for zt interface $i!"
	done
}

stop() {
	local zt_devs FW ip_segment rule

	zt_devs="$(ifconfig | grep 'zt' | awk '{print $1}')"
	[ -z "${zt_devs}" ] && return 0

	[ -x "$(command -v nft)" ] && FW="fw4" || FW="fw3"
	for i in ${zt_devs}
	do
		ip_segment=""
		ip_segment="$(ip route | grep "dev $i proto kernel" | awk '{print $1}')"
		if [ "$FW" = "fw3" ]; then
			iptables -D FORWARD -i "$i" -j ACCEPT 2>/dev/null
			iptables -D FORWARD -o "$i" -j ACCEPT 2>/dev/null
			iptables -t nat -D POSTROUTING -o "$i" -j MASQUERADE 2>/dev/null
			[ -n "$ip_segment" ] && iptables -t nat -D POSTROUTING -s "${ip_segment}" -j MASQUERADE 2>/dev/null
		else
			chains="forward srcnat"
			rule="$i"
			[ -n "$ip_segment" ] && rule="${rule}|$ip_segment"
			for c in $chains; do
				handles=$(nft -a list chain inet fw4 $c | grep -E "$rule" | cut -d'#' -f2 | cut -d' ' -f3)
				for h in $handles; do
					nft delete rule inet fw4 $c handle $h
				done
			done
		fi
		log "Removed nat rules for zt interface $i!"
	done
}

